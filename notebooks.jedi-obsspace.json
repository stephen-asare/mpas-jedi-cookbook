{"version":2,"kind":"Notebook","sha256":"f38562878f3feec9b63fdb41d1f13404ec135336ea3bd09cc04ebff8977341ee","slug":"notebooks.jedi-obsspace","location":"/notebooks/jedi-obsSpace.ipynb","dependencies":[],"frontmatter":{"title":"Visualization of JEDI analysis in the observation space","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Guoqing Ge","given":"Guoqing","family":"Ge"},"name":"Guoqing Ge","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Orhan Eroglu","given":"Orhan","family":"Eroglu"},"name":"Orhan Eroglu","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Yan Pan","given":"Yan","family":"Pan"},"name":"Yan Pan","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Haidao Lin","given":"Haidao","family":"Lin"},"name":"Haidao Lin","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Stephen Asare","given":"Stephen","family":"Asare"},"name":"Stephen Asare","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Altug Karakurt","given":"Altug","family":"Karakurt"},"name":"Altug Karakurt","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Philip Chmielowiec","given":"Philip","family":"Chmielowiec"},"name":"Philip Chmielowiec","id":"contributors-myst-generated-uid-6"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/mpas-jedi-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"abbreviations":{"MPAS":"Model for Prediction Across Scales","JEDI":"Joint Effort for Data Assimilation Integration","RRFS":"Rapid Refresh Forecast System","DA":"Data Assimilation","CIRES":"Cooperative Institute for Research In Environmental Sciences","NOAA":"National Oceanic and Atmospheric Administration","GSL":"Global Systems Laboratory","NSF":"National Science Foundation","NCAR":"National Center for Atmospheric Research"},"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/mpas-jedi-cookbook/blob/main/notebooks/jedi-obsSpace.ipynb","thumbnail":"/mpas-jedi-cookbook/build/jedi-obsSpace-ad87b115a8ffd879ba257199a6097790.png","exports":[{"format":"ipynb","filename":"jedi-obsSpace.ipynb","url":"/mpas-jedi-cookbook/build/jedi-obsSpace-a2df28a8fc7f48c97ad1e8d3179ed2a0.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"image","url":"/mpas-jedi-cookbook/build/jedi-obsSpace-ad87b115a8ffd879ba257199a6097790.png","alt":"JEDI","width":"400px","align":"center","key":"gP5HFyvSI8","urlSource":"images/jedi-obsSpace.png"},{"type":"heading","depth":4,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In this section, you’ll learn:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Tv3JSMPnEk"}],"identifier":"in-this-section-youll-learn","label":"In this section, you’ll learn:","html_id":"in-this-section-youll-learn","implicit":true,"key":"RL3gu3gAtE"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Generate data assimilation statistics and visualize them in the observation space","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"H8e8lQlMFJ"}],"key":"JVFz7XQpOY"}],"key":"tCbZi74azD"},{"type":"comment","value":"\n### Related Documentation\n\n* [URL title](URL)\n* \n","key":"Iib9rlb5F0"},{"type":"heading","depth":4,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"PZj00aKEfT"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"kSzkMfch5E"},{"type":"table","position":{"start":{"line":19,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"L6ALVYiqZK"}],"key":"PDoIjMO7Fm"},{"type":"tableCell","header":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"S3u8um8g9Y"}],"key":"xHssuJhAu6"},{"type":"tableCell","header":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"WC8yXze8ua"}],"key":"Bv4xl8jftL"}],"key":"jipqtAlmc3"},{"type":"tableRow","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Atmospheric Data Assimilation","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"Nw2igsFh80"}],"key":"FxhBxfORhl"},{"type":"tableCell","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"pI7OJRPtuh"}],"key":"R5ee9qdRCs"},{"type":"tableCell","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[],"key":"W65R31iRaC"}],"key":"oQtDPyZhlq"}],"key":"BCTch9nR9X"},{"type":"paragraph","position":{"start":{"line":23,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"strong","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"xBqLW6prkJ"}],"key":"UEJz9P0Xav"},{"type":"text","value":": 10 minutes","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"qlYGoOVeYC"},{"type":"break","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"liDffpXFwS"},{"type":"emphasis","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Readers may check ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"PkOsr6Qwry"},{"type":"link","url":"https://github.com/pyDAmonitor/pyDAmonitor","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"pyDAmonitor","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"W9dKXtwwTe"}],"urlSource":"https://github.com/pyDAmonitor/pyDAmonitor","error":true,"key":"SKSb9ilLrW"},{"type":"text","value":" for more information","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"GyDCBvqmFJ"}],"key":"iWKPbx5z1M"}],"key":"uHEzhHZorb"},{"type":"thematicBreak","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"nNpHKCyiRW"}],"key":"XW41mwv8t2"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Work with obsSpace","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u6Arky1lMk"}],"identifier":"work-with-obsspace","label":"Work with obsSpace","html_id":"work-with-obsspace","implicit":true,"key":"fINlZYPCYd"}],"key":"DpUKttRMHy"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"abbreviation","title":"Joint Effort for Data Assimilation Integration","children":[{"type":"text","value":"JEDI","key":"ArXXHnakxA"}],"key":"GCMKS6CaPO"},{"type":"text","value":" or GSI generates observation space diagnostic files, which contains original observation information, ","key":"BI4ktLAMNs"},{"type":"inlineCode","value":"hofx","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wyQMaHdu5s"},{"type":"text","value":" (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ilkJ2Pl06Q"},{"type":"inlineCode","value":"H(x)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y5ab4G5Ekb"},{"type":"text","value":", i.e. model counter-parts at the observation locations), ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"epzCFjK0TF"},{"type":"inlineCode","value":"OMB","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OUF4sFMCNx"},{"type":"text","value":" (observation minus background), ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yRba6chj24"},{"type":"inlineCode","value":"OMA","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hV7t5IVMNp"},{"type":"text","value":" as well as other information.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uUf7fGkkSF"}],"key":"g1vFv7ci5d"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook covers how to deal with ","key":"k0JXChkNZw"},{"type":"abbreviation","title":"Joint Effort for Data Assimilation Integration","children":[{"type":"text","value":"JEDI","key":"usoMzkSKZd"}],"key":"pU4uOWJTGx"},{"type":"text","value":" diganostic files (which are also called output ioda files). We call them ","key":"IYf41hO6KZ"},{"type":"inlineCode","value":"jdiag","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bJvbEE7atr"},{"type":"text","value":" files here.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tD4MZWRQvJ"}],"key":"ylWdeDc4gj"}],"key":"UIaofPfV0e"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import packages","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wnRq6S1TeG"}],"identifier":"import-packages","label":"Import packages","html_id":"import-packages","implicit":true,"key":"otjtgrX6ZC"}],"key":"fvJ8EJeiUf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time \n\n# autoload external python modules if they changed\n%load_ext autoreload\n%autoreload 2\n\n# import modules\nimport warnings\nimport math\nimport sys\nimport os\n\nimport cartopy.crs as ccrs\nimport geoviews as gv\nimport geoviews.feature as gf\nimport holoviews as hv\nimport hvplot.xarray\nfrom holoviews import opts\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mticker\nimport matplotlib.colors as colors\nfrom netCDF4 import Dataset\n\n\nimport s3fs\nimport seaborn as sns  # seaborn handles NaN values automatically\n\nimport geopandas as gp\nimport numpy as np\nimport uxarray as ux\nimport xarray as xr\nimport pandas as pd\n\nfrom obsSpace import obsSpace, fit_rate, query_data, to_dataframe, query_dataset, query_obj","key":"jJGH5GelYp"},{"type":"output","id":"qE1cUChG0Gpcynhbb7vUH","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<script type=\"esms-options\">{\"shimMode\": true}</script><style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n  > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.3.min.js\", \"https://cdn.holoviz.org/panel/1.7.5/dist/panel.min.js\", \"https://cdn.jsdelivr.net/npm/@holoviz/geoviews@1.14.1/dist/geoviews.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.3.min.js\", \"https://cdn.holoviz.org/panel/1.7.5/dist/panel.min.js\", \"https://cdn.jsdelivr.net/npm/@holoviz/geoviews@1.14.1/dist/geoviews.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"},"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"}}},{"output_type":"display_data","metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"d478ddfb-a0d6-4fac-923e-1dadc504a42a"}},"data":{"text/html":{"content":"<div id='d478ddfb-a0d6-4fac-923e-1dadc504a42a'>\n  <div id=\"b0e587cc-af15-4556-b6b7-b47bc51e6c6d\" data-root-id=\"d478ddfb-a0d6-4fac-923e-1dadc504a42a\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"75343c49-4fa2-48ed-ac1e-e5d38723a7e6\":{\"version\":\"3.7.3\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"panel.models.browser.BrowserInfo\",\"id\":\"d478ddfb-a0d6-4fac-923e-1dadc504a42a\"},{\"type\":\"object\",\"name\":\"panel.models.comm_manager.CommManager\",\"id\":\"a9df778b-51b3-4a2b-a391-515dd31f27d0\",\"attributes\":{\"plot_id\":\"d478ddfb-a0d6-4fac-923e-1dadc504a42a\",\"comm_id\":\"15f83f204f194db7b48451db1dba754b\",\"client_comm_id\":\"f14f1a77cbf64a5e9ab42daa3aa552b5\"}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"ReactiveESM1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"JSComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"ReactComponent1\",\"properties\":[{\"name\":\"use_shadow_dom\",\"kind\":\"Any\",\"default\":true},{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"AnyWidgetComponent1\",\"properties\":[{\"name\":\"use_shadow_dom\",\"kind\":\"Any\",\"default\":true},{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"max_notifications\",\"kind\":\"Any\",\"default\":5},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_rendered\",\"kind\":\"Any\",\"default\":false},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"request_value1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"_synced\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_request_sync\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"holoviews.plotting.bokeh.raster.HoverModel\",\"properties\":[{\"name\":\"xy\",\"kind\":\"Any\",\"default\":null},{\"name\":\"data\",\"kind\":\"Any\",\"default\":null}]}]}};\n  var render_items = [{\"docid\":\"75343c49-4fa2-48ed-ac1e-e5d38723a7e6\",\"roots\":{\"d478ddfb-a0d6-4fac-923e-1dadc504a42a\":\"b0e587cc-af15-4556-b6b7-b47bc51e6c6d\"},\"root_ids\":[\"d478ddfb-a0d6-4fac-923e-1dadc504a42a\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"},"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<script type=\"esms-options\">{\"shimMode\": true}</script><style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n  > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = false;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = true;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.jsdelivr.net/npm/@holoviz/geoviews@1.14.1/dist/geoviews.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = false;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = true;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.jsdelivr.net/npm/@holoviz/geoviews@1.14.1/dist/geoviews.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"},"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"}}},{"output_type":"stream","name":"stdout","text":"CPU times: user 8.7 s, sys: 654 ms, total: 9.35 s\nWall time: 9.71 s\n"}],"key":"YtuBcwfKpY"}],"key":"ZR7VPWTFqw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Retrieve ","key":"Emla60HNLQ"},{"type":"abbreviation","title":"Joint Effort for Data Assimilation Integration","children":[{"type":"text","value":"JEDI","key":"pi0i5sZlLZ"}],"key":"cKqGXsiatb"},{"type":"text","value":" data","key":"SUQXdgDwL3"}],"identifier":"retrieve-jedi-data","label":"Retrieve JEDI data","html_id":"retrieve-jedi-data","implicit":true,"key":"ZixBNERzLU"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The example ","key":"mFM7SfSegm"},{"type":"abbreviation","title":"Joint Effort for Data Assimilation Integration","children":[{"type":"text","value":"JEDI","key":"S1m8llCwTR"}],"key":"aua6yUQerq"},{"type":"text","value":" data are stored at ","key":"NHoq974UoV"},{"type":"link","url":"https://par.nsf.gov/biblio/10296117-jetstream2-accelerating-cloud-computing-via-jetstream","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"jetstream2","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XqjxVjqWgh"}],"urlSource":"https://par.nsf.gov/biblio/10296117-jetstream2-accelerating-cloud-computing-via-jetstream","key":"pCOrb4F6ZM"},{"type":"text","value":". We need to retreive those data first.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cnkw3WSLmz"}],"key":"mycb1aXgrB"}],"key":"wL1AG2TrOW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nlocal_dir=\"/tmp/conus12km\"\nos.makedirs(local_dir, exist_ok=True)\n\nif not os.path.exists(local_dir + \"/jdiag_cris-fsr_n20.nc\"):\n    jetstream_url = 'https://js2.jetstream-cloud.org:8001/'\n    fs = s3fs.S3FileSystem(anon=True, asynchronous=False,client_kwargs=dict(endpoint_url=jetstream_url))\n    conus12_path = 's3://pythia/mpas/conus12km'\n    fs.get(conus12_path + \"/jdiag_aircar_t133.nc\", local_dir+\"/jdiag_aircar_t133.nc\")\n    fs.get(conus12_path + \"/jdiag_aircar_q133.nc\", local_dir+\"/jdiag_aircar_q133.nc\")\n    fs.get(conus12_path + \"/jdiag_aircar_uv233.nc\", local_dir+\"/jdiag_aircar_uv233.nc\")\n    fs.get(conus12_path + \"/jdiag_cris-fsr_n20.nc\", local_dir+\"/jdiag_cris-fsr_n20.nc\")\n    print(\"Data downloading completed\")\nelse:\n    print(\"Skip..., data is available in local\")\n\njdiag_file=local_dir+\"/jdiag_aircar_t133.nc\"","key":"QYDekUqBag"},{"type":"output","id":"F91LlyhQb3w7gIMe3z0VZ","data":[{"output_type":"stream","name":"stdout","text":"Data downloading completed\nCPU times: user 818 ms, sys: 929 ms, total: 1.75 s\nWall time: 4.22 s\n"}],"key":"PxD3EY0f4B"}],"key":"MKn8kxdJ4l"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use NetCDF4 to read jdiag files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bi3xrww8H6"}],"identifier":"use-netcdf4-to-read-jdiag-files","label":"Use NetCDF4 to read jdiag files","html_id":"use-netcdf4-to-read-jdiag-files","implicit":true,"key":"gbyb4S4ea1"}],"key":"aq2ekPqK81"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dataset=Dataset(jdiag_file, mode='r')\nquery_dataset(dataset)","key":"trs3jGoXsy"},{"type":"output","id":"woL_gvUFR31d441X20nhH","data":[{"output_type":"stream","name":"stdout","text":"EffectiveError0\n    airTemperature, \nEffectiveError1\n    airTemperature, \nEffectiveError2\n    airTemperature, \nEffectiveQC0\n    airTemperature, \nEffectiveQC1\n    airTemperature, \nEffectiveQC2\n    airTemperature, \nMetaData\n    stationIdentification, aircraftFlightPhase, timeOffset, prepbufrDataLvlCat, longitude, stationElevation, latitude, prepbufrReportType, pressure, longitude_latitude_pressure, dateTime, height, dumpReportType, aircraftFlightNumber, \nObsBias0\n    airTemperature, \nObsBias1\n    airTemperature, \nObsBias2\n    airTemperature, \nObsError\n    airTemperature, relativeHumidity, specificHumidity, windEastward, pressure, windNorthward, \nObsType\n    specificHumidity, windEastward, airTemperature, windNorthward, \nObsValue\n    dewpointTemperature, specificHumidity, airTemperature, windEastward, windNorthward, \nQualityMarker\n    airTemperature, pressure, windEastward, specificHumidity, height, windNorthward, \nTempObsErrorData\n    airTemperature, \nhofx0\n    airTemperature, \nhofx1\n    airTemperature, \nhofx2\n    airTemperature, \ninnov1\n    airTemperature, \noman\n    airTemperature, \nombg\n    airTemperature, \n"}],"key":"H8DQn2CXyw"}],"key":"mKWe0bxlDb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vhQOSESYwQ"},{"type":"inlineCode","value":"obsSpace","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hQe0RWPFoe"},{"type":"text","value":" class to read jdiag files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"js6iFIrnGJ"}],"identifier":"use-the-obsspace-class-to-read-jdiag-files","label":"Use the obsSpace class to read jdiag files","html_id":"use-the-obsspace-class-to-read-jdiag-files","implicit":true,"key":"Bv6KMfQNo5"}],"key":"wSQLRB5ktq"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"From the above output, we can see that jdiag (or output ioda file) wraps atmospheric state varaibles under attributes (or groups, such as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SwEzuTzW8i"},{"type":"inlineCode","value":"hofx0","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jP24SsuyhB"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GBHHP7orr7"},{"type":"inlineCode","value":"obsError","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QcknuO1JHk"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fi3AGly9PB"},{"type":"inlineCode","value":"ObsValue","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HHQs5Xm2Sc"},{"type":"text","value":", etc).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lm4ml0ppd4"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YzDuAYdE0w"},{"type":"text","value":"We provide a Python class ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"X4ZX4506IZ"},{"type":"inlineCode","value":"obsSpace","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uEcJGsbSeS"},{"type":"text","value":" to access jdiag data in a traditional, intuitive way, such as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U3dFMOdLxl"},{"type":"inlineCode","value":"aircar.t.hofx0","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Obo7WWA4fW"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yBY533CB09"},{"type":"inlineCode","value":"aircar.t.obsError","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tqT26A1TMY"},{"type":"text","value":", etc.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YBVY6q3gEK"}],"key":"tVpfXFJx54"}],"key":"HHxzRRdB7R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# create an `aircar` object using the `obsSpace` class\naircar = obsSpace(jdiag_file)","key":"qXcPae8YcO"},{"type":"output","id":"f7K5t1lOvH_Y6PAB2FtQL","data":[],"key":"sPErTkqTy8"}],"key":"cyoTYHe8i5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"check the aircar object","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b4GjRvInlR"}],"identifier":"check-the-aircar-object","label":"check the aircar object","html_id":"check-the-aircar-object","implicit":true,"key":"bnuKVpIon3"}],"key":"VmcPuKTQNR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"query_obj(aircar)","key":"I3ej2U97Xh"},{"type":"output","id":"O9UzRbTTWND8PV3gpNGMP","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"['bt',\n 'dataset',\n 'filepath',\n 'groups',\n 'locations',\n 'metadata',\n 'nlocs',\n 'q',\n 't',\n 'u',\n 'v']","content_type":"text/plain"}}}],"key":"EaRFlC7FxV"}],"key":"KQ5643qjSE"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"From the above output, we can see the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vqZgeVva6H"},{"type":"inlineCode","value":"aircar","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MbcD5J2pZ3"},{"type":"text","value":" object contains ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XnPSaeBY7G"},{"type":"inlineCode","value":"t","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gyQ06iMigp"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KiayA2uiWe"},{"type":"inlineCode","value":"q","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v3MpS3LWnb"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vFUiOf047N"},{"type":"inlineCode","value":"u","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tLaHojOyBn"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v6sCBD6XLe"},{"type":"inlineCode","value":"v","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"flIdRW8mzb"},{"type":"text","value":", etc. Since ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Fq5R2iWDIC"},{"type":"inlineCode","value":"jdiag_aircar_t133.nc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AMb2lQ2daO"},{"type":"text","value":" only contains temperature observations, only ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qNU5ABal1m"},{"type":"inlineCode","value":"aircar.t","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AHXqXUdJsK"},{"type":"text","value":" has observation diagnostics.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zn0JTNOScw"}],"key":"gDahKahHOl"}],"key":"vO7o66XjRp"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Query temperature data array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E4JzEyz6Gr"}],"identifier":"query-temperature-data-array","label":"Query temperature data array","html_id":"query-temperature-data-array","implicit":true,"key":"DJVcyT6SxB"}],"key":"cvkPwP56S5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"query_data(aircar.t)","key":"uTATcnM9qR"},{"type":"output","id":"HtCAyT9XwCCmYupy7ilDO","data":[{"output_type":"stream","name":"stdout","text":"EffectiveError0, EffectiveError1, EffectiveError2, EffectiveQC0, EffectiveQC1, EffectiveQC2, stationIdentification, aircraftFlightPhase, timeOffset, prepbufrDataLvlCat, longitude, stationElevation, latitude, prepbufrReportType, pressure, dateTime, height, dumpReportType, aircraftFlightNumber, ObsBias0, ObsBias1, ObsBias2, ObsError, ObsType, ObsValue, QualityMarker, TempObsErrorData, hofx0, hofx1, hofx2, innov1, oman, ombg, \n"}],"key":"hB8VDskSyq"}],"key":"XCKW8NlZQ2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# print out array values\nnp.set_printoptions(threshold=500) # don't print out all array values\nprint(aircar.t.ObsValue)","key":"aDw1nXo8Ug"},{"type":"output","id":"FgihGwV3lROeSBJMQ0Agm","data":[{"output_type":"stream","name":"stdout","text":"[229.15    220.95    219.95    ... 271.94998 270.15    232.15   ]\n"}],"key":"QFt3PNRvbl"}],"key":"GvfEcF7Eys"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert data array to Pandas DataFrame","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ktqqc59Slv"}],"identifier":"convert-data-array-to-pandas-dataframe","label":"Convert data array to Pandas DataFrame","html_id":"convert-data-array-to-pandas-dataframe","implicit":true,"key":"fkLwDdMCwi"}],"key":"bgatqdgLXx"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Converting jdiag data into Pandas DataFrame brings up lots of benefits and we can utilize lots of existing DataFrame capabilities.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sV5jzntEeo"}],"key":"iYcazTaxok"}],"key":"f2Q37kIlMV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df = to_dataframe(aircar.t)\ndf","key":"u7TQd4wS5H"},{"type":"output","id":"OlA9zMfwFGq2KZF78CZTv","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"       EffectiveError0  EffectiveError1  EffectiveError2  EffectiveQC0  \\\n0             0.884290         0.884290         0.884290             0   \n1             0.898347         0.898347         0.898347             0   \n2             0.898347         0.898347         0.898347             0   \n3             1.034225         1.034225         1.034225             0   \n4             1.181994         1.181994         1.181994             0   \n...                ...              ...              ...           ...   \n26111         0.811471         0.811471         0.811471             0   \n26112         0.798288         0.798288         0.798288             0   \n26113         0.787659         0.787659         0.787659             0   \n26114         0.777276         0.777276         0.777276             0   \n26115         0.836128         0.836128         0.836128             0   \n\n       EffectiveQC1  EffectiveQC2 stationIdentification  aircraftFlightPhase  \\\n0                 0             0              J1IHLDRA                    3   \n1                 0             0              VXQVGCRA                    3   \n2                 0             0              VXQVGCRA                    3   \n3                 0             0              F5IHLIJA                    5   \n4                 0             0              QJIVGCBA                    5   \n...             ...           ...                   ...                  ...   \n26111             0             0              SMTENXJA                    5   \n26112             0             0              SMTENXJA                    5   \n26113             0             0              SMTENXJA                    5   \n26114             0             0              SMTENXJA                    5   \n26115             0             0              0FPSA4RA                    5   \n\n        timeOffset  prepbufrDataLvlCat  ...  ObsType    ObsValue  \\\n0     -3512.988037                   6  ...      133  229.149994   \n1     -3600.000000                   6  ...      133  220.949997   \n2     -3480.011963                   6  ...      133  219.949997   \n3     -3539.988037                   6  ...      133  284.750000   \n4     -3359.988037                   6  ...      133  282.449982   \n...            ...                 ...  ...      ...         ...   \n26111  1069.991943                   6  ...      133  274.449982   \n26112  1090.008057                   6  ...      133  273.250000   \n26113  1109.988037                   6  ...      133  271.949982   \n26114  1130.004028                   6  ...      133  270.149994   \n26115  1271.987915                   6  ...      133  232.149994   \n\n       QualityMarker  TempObsErrorData       hofx0       hofx1       hofx2  \\\n0                  1          0.884290  229.697006  229.354965  229.330490   \n1                  1          0.898347  219.916229  220.130356  220.117081   \n2                  1          0.898347  219.491577  219.610397  219.599014   \n3                  1          1.034225  282.241180  282.630066  282.624481   \n4                  1          1.181994  285.168213  284.194702  284.223480   \n...              ...               ...         ...         ...         ...   \n26111              1          0.811471  274.202332  274.442047  274.429596   \n26112              1          0.798288  272.921844  273.153259  273.145599   \n26113              1          0.787659  271.314209  271.738586  271.734497   \n26114              1          0.777276  269.415680  270.106445  270.105499   \n26115              1          0.836128  232.081985  231.987366  231.995483   \n\n         innov1      oman      ombg  \n0     -0.204977 -0.180499 -0.547008  \n1      0.819635  0.832910  1.033774  \n2      0.339606  0.350979  0.458424  \n3      2.119942  2.125526  2.508817  \n4     -1.744717 -1.773488 -2.718246  \n...         ...       ...       ...  \n26111  0.007942  0.020377  0.247641  \n26112  0.096755  0.104409  0.328150  \n26113  0.211408  0.215486  0.635776  \n26114  0.043540  0.044484  0.734302  \n26115  0.162626  0.154513  0.068016  \n\n[26116 rows x 33 columns]","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>EffectiveError0</th>\n      <th>EffectiveError1</th>\n      <th>EffectiveError2</th>\n      <th>EffectiveQC0</th>\n      <th>EffectiveQC1</th>\n      <th>EffectiveQC2</th>\n      <th>stationIdentification</th>\n      <th>aircraftFlightPhase</th>\n      <th>timeOffset</th>\n      <th>prepbufrDataLvlCat</th>\n      <th>...</th>\n      <th>ObsType</th>\n      <th>ObsValue</th>\n      <th>QualityMarker</th>\n      <th>TempObsErrorData</th>\n      <th>hofx0</th>\n      <th>hofx1</th>\n      <th>hofx2</th>\n      <th>innov1</th>\n      <th>oman</th>\n      <th>ombg</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.884290</td>\n      <td>0.884290</td>\n      <td>0.884290</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>J1IHLDRA</td>\n      <td>3</td>\n      <td>-3512.988037</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>229.149994</td>\n      <td>1</td>\n      <td>0.884290</td>\n      <td>229.697006</td>\n      <td>229.354965</td>\n      <td>229.330490</td>\n      <td>-0.204977</td>\n      <td>-0.180499</td>\n      <td>-0.547008</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.898347</td>\n      <td>0.898347</td>\n      <td>0.898347</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>VXQVGCRA</td>\n      <td>3</td>\n      <td>-3600.000000</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>220.949997</td>\n      <td>1</td>\n      <td>0.898347</td>\n      <td>219.916229</td>\n      <td>220.130356</td>\n      <td>220.117081</td>\n      <td>0.819635</td>\n      <td>0.832910</td>\n      <td>1.033774</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.898347</td>\n      <td>0.898347</td>\n      <td>0.898347</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>VXQVGCRA</td>\n      <td>3</td>\n      <td>-3480.011963</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>219.949997</td>\n      <td>1</td>\n      <td>0.898347</td>\n      <td>219.491577</td>\n      <td>219.610397</td>\n      <td>219.599014</td>\n      <td>0.339606</td>\n      <td>0.350979</td>\n      <td>0.458424</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.034225</td>\n      <td>1.034225</td>\n      <td>1.034225</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>F5IHLIJA</td>\n      <td>5</td>\n      <td>-3539.988037</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>284.750000</td>\n      <td>1</td>\n      <td>1.034225</td>\n      <td>282.241180</td>\n      <td>282.630066</td>\n      <td>282.624481</td>\n      <td>2.119942</td>\n      <td>2.125526</td>\n      <td>2.508817</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.181994</td>\n      <td>1.181994</td>\n      <td>1.181994</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>QJIVGCBA</td>\n      <td>5</td>\n      <td>-3359.988037</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>282.449982</td>\n      <td>1</td>\n      <td>1.181994</td>\n      <td>285.168213</td>\n      <td>284.194702</td>\n      <td>284.223480</td>\n      <td>-1.744717</td>\n      <td>-1.773488</td>\n      <td>-2.718246</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>26111</th>\n      <td>0.811471</td>\n      <td>0.811471</td>\n      <td>0.811471</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>SMTENXJA</td>\n      <td>5</td>\n      <td>1069.991943</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>274.449982</td>\n      <td>1</td>\n      <td>0.811471</td>\n      <td>274.202332</td>\n      <td>274.442047</td>\n      <td>274.429596</td>\n      <td>0.007942</td>\n      <td>0.020377</td>\n      <td>0.247641</td>\n    </tr>\n    <tr>\n      <th>26112</th>\n      <td>0.798288</td>\n      <td>0.798288</td>\n      <td>0.798288</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>SMTENXJA</td>\n      <td>5</td>\n      <td>1090.008057</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>273.250000</td>\n      <td>1</td>\n      <td>0.798288</td>\n      <td>272.921844</td>\n      <td>273.153259</td>\n      <td>273.145599</td>\n      <td>0.096755</td>\n      <td>0.104409</td>\n      <td>0.328150</td>\n    </tr>\n    <tr>\n      <th>26113</th>\n      <td>0.787659</td>\n      <td>0.787659</td>\n      <td>0.787659</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>SMTENXJA</td>\n      <td>5</td>\n      <td>1109.988037</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>271.949982</td>\n      <td>1</td>\n      <td>0.787659</td>\n      <td>271.314209</td>\n      <td>271.738586</td>\n      <td>271.734497</td>\n      <td>0.211408</td>\n      <td>0.215486</td>\n      <td>0.635776</td>\n    </tr>\n    <tr>\n      <th>26114</th>\n      <td>0.777276</td>\n      <td>0.777276</td>\n      <td>0.777276</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>SMTENXJA</td>\n      <td>5</td>\n      <td>1130.004028</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>270.149994</td>\n      <td>1</td>\n      <td>0.777276</td>\n      <td>269.415680</td>\n      <td>270.106445</td>\n      <td>270.105499</td>\n      <td>0.043540</td>\n      <td>0.044484</td>\n      <td>0.734302</td>\n    </tr>\n    <tr>\n      <th>26115</th>\n      <td>0.836128</td>\n      <td>0.836128</td>\n      <td>0.836128</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0FPSA4RA</td>\n      <td>5</td>\n      <td>1271.987915</td>\n      <td>6</td>\n      <td>...</td>\n      <td>133</td>\n      <td>232.149994</td>\n      <td>1</td>\n      <td>0.836128</td>\n      <td>232.081985</td>\n      <td>231.987366</td>\n      <td>231.995483</td>\n      <td>0.162626</td>\n      <td>0.154513</td>\n      <td>0.068016</td>\n    </tr>\n  </tbody>\n</table>\n<p>26116 rows × 33 columns</p>\n</div>","content_type":"text/html"}}}],"key":"vamq8GKDz2"}],"key":"BaVhKxsnk7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot histograms","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sdrWycs8fQ"}],"identifier":"plot-histograms","label":"Plot histograms","html_id":"plot-histograms","implicit":true,"key":"zojlMMaeS8"}],"key":"xkB2h8BTh5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 1","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uvXvlFCe8w"}],"identifier":"example-1","label":"Example 1","html_id":"example-1","implicit":true,"key":"TCEdB0iMzd"}],"key":"OrFPOqqRmg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# plot histogram of OmA\n\nplt.figure(figsize=(8, 5))\n#sns.histplot(df[\"oman\"], bins=50, kde=True, color=\"steelblue\")\nsns.histplot(aircar.t.oman, bins=100, kde=True, color=\"steelblue\")\nplt.title(\"Histogram of oman\")\nplt.xlabel(\"oman values\")\nplt.ylabel(\"Density\")\nplt.tight_layout()\nplt.show()","key":"UCJ8S6fePr"},{"type":"output","id":"JLftBpNj_In7dqluuyGgX","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 800x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"b4aa83f156926bfcfdca7e48d06724db","path":"/mpas-jedi-cookbook/build/b4aa83f156926bfcfdca7e48d06724db.png"}}}],"key":"qjjADNaTr2"}],"key":"ol1nJBJUxS"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tygMMNCmS0"}],"identifier":"example-2","label":"Example 2","html_id":"example-2","implicit":true,"key":"HBJGBYF5Dm"}],"key":"KCvpngU2pC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# overlay OMB and OMA histogram together\n\ndf_long = df[[\"oman\", \"ombg\"]].melt(var_name=\"variable\", value_name=\"value\")\n\nplt.figure(figsize=(8, 5))\nsns.histplot(data=df_long, x=\"value\", hue=\"variable\", bins=50, kde=True, element=\"step\", stat=\"count\")\nplt.title(\"Overlayed Histogram: oman vs ombg\")\nplt.tight_layout()\nplt.show()","key":"pHWTrTDshH"},{"type":"output","id":"1y9XE09CFnbj94TZ2_xaa","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 800x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"f543e348fcae5cc933113d5ccc067af0","path":"/mpas-jedi-cookbook/build/f543e348fcae5cc933113d5ccc067af0.png"}}}],"key":"ba7Oj273Qb"}],"key":"kWt5UNAqnw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example 3","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NgFKEokWzx"}],"identifier":"example-3","label":"Example 3","html_id":"example-3","implicit":true,"key":"AHAOs77Q5s"}],"key":"bvGIac7kZD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# overlay OMB and OMA histogram together\n\nplt.figure(figsize=(8, 5))\nsns.histplot(df[\"oman\"], bins=100, kde=True, color=\"blue\", label=\"oman\", multiple=\"layer\")\nsns.histplot(df[\"ombg\"], bins=100, kde=True, color=\"red\", label=\"ombg\", multiple=\"layer\")\n\nplt.title(\"Overlayed Histogram: oman vs ombg\")\nplt.xlabel(\"Value\")\nplt.ylabel(\"Frequency\")\nplt.legend()\nplt.tight_layout()\nplt.show()","key":"H2gRwjsb8W"},{"type":"output","id":"HdrMGmBkKLzvNQTVA9ldn","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 800x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"e4f036611ade750d5aa811b28260d1a3","path":"/mpas-jedi-cookbook/build/e4f036611ade750d5aa811b28260d1a3.png"}}}],"key":"AFzwxOb94D"}],"key":"TRP9A6F32S"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"plot fitting rate","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UAxlyFQLXl"}],"identifier":"plot-fitting-rate","label":"plot fitting rate","html_id":"plot-fitting-rate","implicit":true,"key":"ZkKyYxnpas"}],"key":"HKZ1GyYo6W"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The rate fitting to observations is an important metric to evaluate data assimilation performance.\nWe don’t want a small fitting rate, which means very little observation impacts on the model forecast.\nWe don’t want a large fitting rate either, which means we fit too close to the observations and the model forecast will crash. Usually, a fitting rate of 20%~30% is expected.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E6IrkSBMk1"}],"key":"hDwwpsB1x9"}],"key":"t8QKj7QUfr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# 1. Filter valid data (both 'oman' and 'ombg' are not NaN)\nvalid_df = df[df[\"oman\"].notna() & df[\"ombg\"].notna()].copy()\nvalid_df = valid_df.dropna(subset=[\"height\"])  # removes any rows in valid_df where height is missing (NaN)\nprint(valid_df[valid_df[\"height\"] < 0][\"height\"])   # negative height","key":"b6dQokegeo"},{"type":"output","id":"eM-MpbI05NVSwVJhHEdbw","data":[{"output_type":"stream","name":"stdout","text":"19      -57\n140     -27\n141      -6\n196     -15\n325     -34\n         ..\n23364   -58\n23854   -48\n24839   -24\n25899   -34\n26007   -32\nName: height, Length: 69, dtype: int32\n"}],"key":"AxcdnRtN7t"}],"key":"pUZNDvo2eR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dz = 1000\ngrouped = fit_rate(aircar.t, dz=dz)\n\n# 5. Plot vertical profile of fit_rate vs height\nplt.figure(figsize=(7, 6))\nplt.plot(grouped[\"fit_rate\"], grouped[\"height_bin\"], marker=\"o\", color=\"blue\")\n# plt.axvline(x=0, color=\"gray\", linestyle=\"--\")  # ax vertical line\n\nplt.xlabel(\"Fit Rate (%)\")  # label change\nplt.gca().xaxis.set_major_formatter(plt.FuncFormatter(lambda x, _: f'{x*100:.0f}%'))  # format as %\nplt.ylabel(\"Height Bin (m)\")\nplt.title(\"Vertical Profile of Fit Rate\")\n\n# Fine-tune ticks\nplt.xticks(np.arange(0, 0.25, 0.05))  #, fontsize=12)\nplt.yticks(np.arange(0, 13000, dz))  #, , fontsize=12)\n# Add minor ticks\nfrom matplotlib.ticker import AutoMinorLocator\nplt.gca().xaxis.set_minor_locator(AutoMinorLocator())\nplt.gca().yaxis.set_minor_locator(AutoMinorLocator())\n# plt.grid(which='both', linestyle='--', linewidth=0.5)\nplt.grid(True)\n\nplt.ylim(0, 13000)  # set y-axis from 0 (bottom) to 13,000 (top)\nplt.tight_layout()\nplt.show()","key":"HIfgA20NEi"},{"type":"output","id":"lGi7HZDSzlj8CqW-B8PWz","data":[{"output_type":"stream","name":"stdout","text":"OMA: bias=0.0063 rms=0.9397\nOMB: bias=0.1196 rms=1.1644\nOverall fit_rate: 19.3006%\n0, -1000, 1.0326, 1.4933, 30.8519%\n1, 0, 1.5019, 1.7613, 14.7300%\n2, 1000, 0.8644, 1.1543, 25.1132%\n3, 2000, 0.7517, 1.0818, 30.5067%\n4, 3000, 0.7249, 0.9284, 21.9214%\n5, 4000, 0.7171, 0.9383, 23.5695%\n6, 5000, 1.0533, 1.3160, 19.9605%\n7, 6000, 1.1809, 1.3997, 15.6337%\n8, 7000, 0.7965, 0.9975, 20.1548%\n9, 8000, 0.5794, 0.7382, 21.5208%\n10, 9000, 0.6157, 0.7714, 20.1891%\n11, 10000, 0.6812, 0.8440, 19.2867%\n12, 11000, 0.7952, 0.9764, 18.5534%\n13, 12000, 1.2666, 1.5556, 18.5768%\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 700x600 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"47f2d77f1492bd49629567df1d79b84f","path":"/mpas-jedi-cookbook/build/47f2d77f1492bd49629567df1d79b84f.png"}}}],"key":"YyS0kkXLwS"}],"key":"fGy2o6DMp7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(grouped[\"height_bin\"])","key":"pXH3IO2Ipb"},{"type":"output","id":"jtYpUuUR-hfNEkt1UvRnV","data":[{"output_type":"stream","name":"stdout","text":"0     -1000\n1         0\n2      1000\n3      2000\n4      3000\n5      4000\n6      5000\n7      6000\n8      7000\n9      8000\n10     9000\n11    10000\n12    11000\n13    12000\nName: height_bin, dtype: int32\n"}],"key":"dP0UMSwMoP"}],"key":"zmUYTkKJKz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot satellite radiance observations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xh3cxjcWc6"}],"identifier":"plot-satellite-radiance-observations","label":"Plot satellite radiance observations","html_id":"plot-satellite-radiance-observations","implicit":true,"key":"lf2INyxjAm"}],"key":"aPY1WnT0ik"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"load satellite data using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n64i3mzQvx"},{"type":"inlineCode","value":"obsSpace","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R2fHjiew9W"}],"identifier":"load-satellite-data-using-obsspace","label":"load satellite data using obsSpace","html_id":"load-satellite-data-using-obsspace","implicit":true,"key":"mJyY6it1lh"}],"key":"aQPHU7Nzqu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n\nobsCris = obsSpace(local_dir + \"/jdiag_cris-fsr_n20.nc\")","key":"KrS3qVrK0D"},{"type":"output","id":"gv-_iwOK4GOJDI9sXAGI2","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 3.78 s, sys: 460 ms, total: 4.24 s\nWall time: 4.24 s\n"}],"key":"HPBUYgmKyT"}],"key":"XCXFCKOIvb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# query the `bt` data array, excluding the metadata starting with `sensorCentralWavenumber_`.  bt=Brightness Temperature\nquery_data(obsCris.bt, meta_exclude=\"sensorCentralWavenumber_\")","key":"loaWJdTPKR"},{"type":"output","id":"VgkVonicV9O4R3ogzVCgl","data":[{"output_type":"stream","name":"stdout","text":"DerivedObsError, DerivedObsValue, CloudDetectMinResidualIR, GeoDomainCheck, NearSSTRetCheckIR, ScanEdgeRemoval, SurfaceTempJacobianCheck, GrossCheck, Thinning, UseflagCheck, EffectiveError0, EffectiveError1, EffectiveError2, EffectiveQC0, EffectiveQC1, EffectiveQC2, cloudCoverTotal, sensorZenithAngle, satelliteIdentifier, sensorScanPosition, heightOfTopOfCloud, instrumentIdentifier, longitude, latitude, sensorViewAngle, scanLineNumber, solarZenithAngle, fieldOfRegardNumber, sensorChannelNumber, sensorAzimuthAngle, fieldOfViewNumber, dateTime, solarAzimuthAngle, ObsBias0, ObsBias1, ObsBias2, constantPredictor, emissivityJacobianPredictor, hofx0, hofx1, hofx2, innov1, lapseRatePredictor, lapseRate_order_2Predictor, oman, ombg, sensorScanAnglePredictor, sensorScanAngle_order_2Predictor, sensorScanAngle_order_3Predictor, sensorScanAngle_order_4Predictor, \n"}],"key":"QnvaP2w2zB"}],"key":"yb2zKLKhts"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# print H(x) values\nprint(obsCris.bt.hofx0)","key":"tkh1o4OHaT"},{"type":"output","id":"b3U_DYq8eAUTML3Xbts-8","data":[{"output_type":"stream","name":"stdout","text":"[[-- -- -- ... -- -- --]\n [-- -- -- ... -- -- --]\n [-- -- -- ... -- -- --]\n ...\n [225.10011291503906 228.2823944091797 226.98941040039062 ...\n  275.4639587402344 275.5229797363281 275.2835998535156]\n [225.03855895996094 228.01905822753906 226.7443084716797 ...\n  285.9146423339844 285.9745788574219 285.7776794433594]\n [223.8397216796875 226.27716064453125 224.85659790039062 ...\n  285.6235656738281 285.6897277832031 285.5458679199219]]\n"}],"key":"bhq87SvMAw"}],"key":"j1WRBGzNp7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"assemble target obs array","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WUmfawOtxj"}],"identifier":"assemble-target-obs-array","label":"assemble target obs array","html_id":"assemble-target-obs-array","implicit":true,"key":"P3tESST1gT"}],"key":"HFQfUIw7n0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ncount=0\nidx = []\nidx2 = []\nch=61\nfor n in np.arange(len(obsCris.bt.ombg[:,ch])):\n    #if obsCris.bt.CloudDetectMinResidualIR[n,ch] == 1: \n     if obsCris.bt.ombg[n,ch] > -200 and obsCris.bt.ombg[n,ch] < 200:\n       idx.append(n)\n       ncount = ncount + 1 \n\nlat=obsCris.bt.latitude[idx]\nlon=obsCris.bt.longitude[idx]\nobarray=obsCris.bt.DerivedObsValue[idx,ch]\nprint(lon,lat,obarray)\nprint(ncount)","key":"efk3sF5fy9"},{"type":"output","id":"ZfW-kd5c6pSphWxCC7XtE","data":[{"output_type":"stream","name":"stdout","text":"[-115.9189  -119.51454 -123.75143 ... -120.8286  -122.65434 -132.61992] [39.96    40.04689 23.87319 ... 48.48392 49.66428 49.14518] [229.50182 232.08597 237.9213  ... 230.9885  231.4381  233.62317]\n1313\n"}],"key":"eOYeUoZ5Ku"}],"key":"E6zUojFURZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"prepare color map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vMBQCR7AF3"}],"identifier":"prepare-color-map","label":"prepare color map","html_id":"prepare-color-map","implicit":true,"key":"CsGZ2mCEFi"}],"key":"quKlsqFIpp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"datmi = np.nanmin(obarray)  # Min of the data\ndatma = np.nanmax(obarray)  # Max of the data\n\n\nimport matplotlib.pyplot as plt\nif np.nanmin(obarray) < 0:\n  cmax = datma\n  cmin = datmi\n  cmax=310\n  cmin=200\n  #cmax=1.0\n  #cmin=-1.0\n  cmap = 'RdBu'\nelse:\n  #cmax = omean+stdev\n  #cmin = np.maximum(omean-stdev, 0.0)\n  cma = datma\n  cmin = datmi\n  cmax=310\n  cmin=200\n  #cmax=1.0\n  #cmin=-1.0\n  cmap = 'RdBu'\n  cmap = 'viridis'\n  cmap = 'jet'\n\n\n\ncmin = 200.\ncmax = 310.\nconus_12km = [-150, -50, 15, 55]\n\ncolor_map = plt.cm.get_cmap(cmap)\nreversed_color_map = color_map.reversed()\nunits = 'K'\n#units = '%'\n\nfig = plt.figure(figsize=(10, 5))","key":"rTiG4nx3je"},{"type":"output","id":"FKEYjNSXRvGlDvumB4AY9","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_3750/2108599323.py:33: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed in 3.11. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap()`` or ``pyplot.get_cmap()`` instead.\n  color_map = plt.cm.get_cmap(cmap)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x500 with 0 Axes>","content_type":"text/plain"}}}],"key":"tGpiNUDIp2"}],"key":"Cnu4KEd7sZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Make the plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ci9O82xWEH"}],"identifier":"make-the-plot","label":"Make the plot","html_id":"make-the-plot","implicit":true,"key":"Fd1Q2EkOdN"}],"key":"joiYuNToX4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initialize the plot pointing to the projection\n# ------------------------------------------------\nax = plt.axes(projection=ccrs.PlateCarree(central_longitude=0))\n\n# Plot grid lines\n# ----------------\ngl = ax.gridlines(crs=ccrs.PlateCarree(central_longitude=0), draw_labels=True,\n                  linewidth=1, color='gray', alpha=0.5, linestyle='-')\ngl.top_labels = False\ngl.xlabel_style = {'size': 10, 'color': 'black'}\ngl.ylabel_style = {'size': 10, 'color': 'black'}\ngl.xlocator = mticker.FixedLocator(\n   [-180, -135, -90, -45, 0, 45, 90, 135, 179.9])\nax.set_ylabel(\"Latitude\",  fontsize=7)\nax.set_xlabel(\"Longitude\", fontsize=7)\n\n# Get scatter data\n# ------------------\n#print('obarray = ', obarray)\nprint('min/max obarray = ', min(obarray),max(obarray))\n#sc = ax.scatter(lonData, latData,\nsc = ax.scatter(lon, lat,\n                c=obarray, s=4, linewidth=0,\n                transform=ccrs.PlateCarree(), cmap=cmap, vmin=cmin, vmax = cmax, norm=None, antialiased=True)\n\n\n\n\n# Plot colorbar\n# --------------\ncbar = plt.colorbar(sc, ax=ax, orientation=\"horizontal\", pad=.1, fraction=0.06,ticks=[200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310])\n#cbar = plt.colorbar(sc, ax=ax, orientation=\"horizontal\", pad=.1, fraction=0.06,ticks=[-3, -2.5, -2, -1.5, -1, -0.5, 0, 0.5, 1.0, 1.5, 2.0, 2.5, 3 ])\n#cbar = plt.colorbar(sc, ax=ax, orientation=\"horizontal\", pad=.1, fraction=0.06,ticks=[0, 10, 20, 20, 40, 50, 60, 70, 80, 90, 100])\ncbar.ax.set_ylabel(units, fontsize=10)\n# Plot globally\n# --------------\n#ax.set_global()\n#ax.set_extent(conus)\nax.set_extent(conus_12km)\n\n# Draw coastlines\n# ----------------\nax.coastlines()\nax.text(0.45, -0.1, 'Longitude', transform=ax.transAxes, ha='left')\nax.text(-0.08, 0.4, 'Latitude', transform=ax.transAxes,\n        rotation='vertical', va='bottom')\n\n#text = f\"Total Count:{datcont:0.0f}, Max/Min/Mean/Std: {datma:0.3f}/{datmi:0.3f}/{omean:0.3f}/{stdev:0.3f} {units}\"\n#print(text)\n#ax.text(0.67, -0.1, text, transform=ax.transAxes, va='bottom', fontsize=6.2)\n\ndpi=150\ngl.top_labels = False\nplt.tight_layout()\n\n# show plot\n# -----------\n# pname='test.png'\n# plt.savefig(pname, dpi=dpi)                          ","key":"BpEyJ5nAbS"},{"type":"output","id":"HyioeGaxw0L1oS528jtmu","data":[{"output_type":"stream","name":"stdout","text":"min/max obarray =  220.04314 238.75264\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/mpas-jedi-cookbook/lib/python3.11/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_physical/ne_110m_coastline.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"1e80dacccd04f16a978d4625039622ed","path":"/mpas-jedi-cookbook/build/1e80dacccd04f16a978d4625039622ed.png"}}}],"key":"icTM9ebyzc"}],"key":"qdBc3v2raH"}],"key":"rF6l0m7Dsj"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Visualization of JEDI analysis with UXarray in the model space","url":"/notebooks/jedi-mpas","group":"JEDI(MPAS) Analysis and Visualization"}}},"domain":"http://localhost:3000"}